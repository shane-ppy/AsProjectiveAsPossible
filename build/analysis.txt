Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 82.28      3.76     3.76   499950     0.01     0.01  frame_dummy
  5.47      4.01     0.25        2   125.01   125.01  matchDescriptorWithRatioTest(unsigned char const*, unsigned char const*, int, int, int*&)
  2.84      4.14     0.13        2    65.00    70.00  warpAndFuseImageAPAP(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, int, int, int, Eigen::Array<float, -1, 1, 0, -1, 1> const&, Eigen::Array<float, -1, 1, 0, -1, 1> const&, cv::Mat&)
  2.19      4.24     0.10  2708270     0.00     0.00  void Eigen::internal::real_2x2_jacobi_svd<Eigen::Matrix<float, -1, -1, 0, -1, -1>, float, long>(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, long, long, Eigen::JacobiRotation<float>*, Eigen::JacobiRotation<float>*)
  2.19      4.34     0.10    21000     0.00     0.02  Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int)
  1.09      4.39     0.05   196000     0.00     0.00  Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, 1, false, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, float*, long, float)
  0.88      4.43     0.04   188000     0.00     0.00  void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&)
  0.88      4.47     0.04   188000     0.00     0.00  void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >::makeHouseholder<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1>&, float&, float&) const
  0.88      4.51     0.04        2    20.00    25.01  warpAndFuseImage(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int&, int&, int&, int&)
  0.44      4.53     0.02  2424085     0.00     0.00  getColorSubpixelRGB(cv::Mat const&, float, float, int, int, unsigned char&, unsigned char&, unsigned char&)
  0.22      4.54     0.01     8000     0.00     0.00  void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&)
  0.22      4.55     0.01     4028     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.22      4.56     0.01     1007     0.01     0.02  RandomSampling(int, int, std::vector<int, std::allocator<int> >&)
  0.22      4.57     0.01        4     2.50     2.50  detectSiftAndCalculateDescriptor(cv::Mat&, double*&, unsigned char*&)
  0.00      4.57     0.00  4509549     0.00     0.00  pdist2(float, float, float, float)
  0.00      4.57     0.00   188000     0.00     0.00  void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> const&, float const&, float*)
  0.00      4.57     0.00   188000     0.00     0.00  void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&)
  0.00      4.57     0.00    21000     0.00     0.01  Eigen::HouseholderQR<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::computeInPlace()
  0.00      4.57     0.00    21000     0.00     0.00  Eigen::internal::qr_preconditioner_impl<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1, 0, true>::run(Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&)
  0.00      4.57     0.00    21000     0.00     0.01  void Eigen::internal::householder_qr_inplace_unblocked<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>::Scalar*)
  0.00      4.57     0.00    21000     0.00     0.00  Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::allocate(long, long, unsigned int)
  0.00      4.57     0.00    20000     0.00     0.00  Eigen::MatrixBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::setIdentity(long, long)
  0.00      4.57     0.00    19998     0.00     0.00  rollVector9f(Eigen::Matrix<float, -1, 1, 0, -1, 1> const&)
  0.00      4.57     0.00    19998     0.00     0.00  unrollMatrix3f(Eigen::Matrix<float, 3, 3, 0, 3, 3> const&)
  0.00      4.57     0.00    19998     0.00     0.19  Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*)
  0.00      4.57     0.00    19998     0.00     0.00  void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long)
  0.00      4.57     0.00     8000     0.00     0.00  void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const&, float const&, float*)
  0.00      4.57     0.00     8000     0.00     0.00  void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&)
  0.00      4.57     0.00     4028     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00      4.57     0.00     4007     0.00     0.00  colinearity(Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&)
  0.00      4.57     0.00     4000     0.00     0.00  noHomogeneous(Eigen::Matrix<float, -1, -1, 0, -1, -1>&)
  0.00      4.57     0.00     1007     0.00     0.00  sampleValidTest(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&)
  0.00      4.57     0.00     1007     0.00     0.00  std::vector<int, std::allocator<int> >::reserve(unsigned long)
  0.00      4.57     0.00     1002     0.00     0.02  fitHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&)
  0.00      4.57     0.00     1000     0.00     0.00  filterPointAtInfinity(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&)
  0.00      4.57     0.00     1000     0.00     0.00  computeHomographyResidue(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&)
  0.00      4.57     0.00     1000     0.00     0.01  void Eigen::HouseholderSequence<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, 1, 0, -1, 1>, 1>::evalTo<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 1, -1, 1, 1, -1> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 1, -1, 1, 1, -1>&) const
  0.00      4.57     0.00        4     0.00     0.00  normalizePts(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&)
  0.00      4.57     0.00        4     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> >(Eigen::DenseBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> > const&)
  0.00      4.57     0.00        2     0.00     0.00  normalizeMatch(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&)
  0.00      4.57     0.00        2     0.00    18.10  singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&)
  0.00      4.57     0.00        2     0.00   130.01  detectSiftMatchWithVLFeat(cv::Mat&, cv::Mat&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&)
  0.00      4.57     0.00        2     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long)
  0.00      4.57     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12normalizePtsRN5Eigen6MatrixIfLin1ELin1ELi0ELin1ELin1EEERNS0_IfLi3ELi3ELi0ELi3ELi3EEE
  0.00      4.57     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z19getColorSubpixelRGBRKN2cv3MatEffiiRhS3_S3_
  0.00      4.57     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z25detectSiftMatchWithVLFeatRN2cv3MatES1_RN5Eigen6MatrixIfLin1ELin1ELi0ELin1ELin1EEE
  0.00      4.57     0.00        1     0.00     0.00  _GLOBAL__sub_I_saveData
  0.00      4.57     0.00        1     0.00     0.00  Eigen::internal::queryCacheSizes(int&, int&, int&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.22% of 4.57 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     92.4    0.00    4.22                 APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
                0.00    3.76   19998/19998       Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [3]
                0.10    0.23   19998/21000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
                0.13    0.01       2/2           warpAndFuseImageAPAP(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, int, int, int, Eigen::Array<float, -1, 1, 0, -1, 1> const&, Eigen::Array<float, -1, 1, 0, -1, 1> const&, cv::Mat&) [8]
                0.00    0.00 4509549/4509549     pdist2(float, float, float, float) [36]
                0.00    0.00   19998/19998       void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [41]
                0.00    0.00   19998/19998       rollVector9f(Eigen::Matrix<float, -1, 1, 0, -1, 1> const&) [39]
                0.00    0.00   19998/19998       unrollMatrix3f(Eigen::Matrix<float, 3, 3, 0, 3, 3> const&) [40]
                0.00    0.00       4/4           Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> >(Eigen::DenseBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> > const&) [49]
-----------------------------------------------
                3.76    0.00  499950/499950      Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [3]
[2]     82.3    3.76    0.00  499950         frame_dummy [2]
-----------------------------------------------
                0.00    3.76   19998/19998       APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[3]     82.3    0.00    3.76   19998         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [3]
                3.76    0.00  499950/499950      frame_dummy [2]
-----------------------------------------------
                                                 <spontaneous>
[4]      7.6    0.00    0.35                 GlobalHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, int&, int&, int&, int&, cv::Mat&, cv::Mat&) [4]
                0.00    0.26       2/2           detectSiftMatchWithVLFeat(cv::Mat&, cv::Mat&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [6]
                0.04    0.01       2/2           warpAndFuseImage(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int&, int&, int&, int&) [13]
                0.00    0.04       2/2           singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
                0.00    0.00       2/1002        fitHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [22]
                0.00    0.00       2/2           normalizeMatch(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [50]
-----------------------------------------------
                0.00    0.01    1002/21000       fitHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [22]
                0.10    0.23   19998/21000       APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[5]      7.4    0.10    0.24   21000         Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
                0.00    0.12   20000/21000       Eigen::HouseholderQR<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::computeInPlace() [9]
                0.10    0.00 2708270/2708270     void Eigen::internal::real_2x2_jacobi_svd<Eigen::Matrix<float, -1, -1, 0, -1, -1>, float, long>(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, long, long, Eigen::JacobiRotation<float>*, Eigen::JacobiRotation<float>*) [11]
                0.00    0.02   21000/21000       Eigen::internal::qr_preconditioner_impl<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1, 0, true>::run(Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [21]
                0.00    0.00   21000/21000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::allocate(long, long, unsigned int) [37]
                0.00    0.00   20000/20000       Eigen::MatrixBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::setIdentity(long, long) [38]
-----------------------------------------------
                0.00    0.26       2/2           GlobalHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, int&, int&, int&, int&, cv::Mat&, cv::Mat&) [4]
[6]      5.7    0.00    0.26       2         detectSiftMatchWithVLFeat(cv::Mat&, cv::Mat&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [6]
                0.25    0.00       2/2           matchDescriptorWithRatioTest(unsigned char const*, unsigned char const*, int, int, int*&) [7]
                0.01    0.00       4/4           detectSiftAndCalculateDescriptor(cv::Mat&, double*&, unsigned char*&) [28]
-----------------------------------------------
                0.25    0.00       2/2           detectSiftMatchWithVLFeat(cv::Mat&, cv::Mat&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [6]
[7]      5.5    0.25    0.00       2         matchDescriptorWithRatioTest(unsigned char const*, unsigned char const*, int, int, int*&) [7]
-----------------------------------------------
                0.13    0.01       2/2           APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[8]      3.1    0.13    0.01       2         warpAndFuseImageAPAP(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, int, int, int, Eigen::Array<float, -1, 1, 0, -1, 1> const&, Eigen::Array<float, -1, 1, 0, -1, 1> const&, cv::Mat&) [8]
                0.01    0.00 1210841/2424085     getColorSubpixelRGB(cv::Mat const&, float, float, int, int, unsigned char&, unsigned char&, unsigned char&) [19]
-----------------------------------------------
                0.00    0.01    1000/21000       Eigen::internal::qr_preconditioner_impl<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1, 0, true>::run(Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [21]
                0.00    0.12   20000/21000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
[9]      2.8    0.00    0.13   21000         Eigen::HouseholderQR<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::computeInPlace() [9]
                0.00    0.13   21000/21000       void Eigen::internal::householder_qr_inplace_unblocked<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>::Scalar*) [10]
-----------------------------------------------
                0.00    0.13   21000/21000       Eigen::HouseholderQR<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::computeInPlace() [9]
[10]     2.8    0.00    0.13   21000         void Eigen::internal::householder_qr_inplace_unblocked<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>::Scalar*) [10]
                0.00    0.09  188000/188000      void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> const&, float const&, float*) [12]
                0.04    0.00  188000/188000      void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >::makeHouseholder<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1>&, float&, float&) const [17]
-----------------------------------------------
                0.10    0.00 2708270/2708270     Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
[11]     2.2    0.10    0.00 2708270         void Eigen::internal::real_2x2_jacobi_svd<Eigen::Matrix<float, -1, -1, 0, -1, -1>, float, long>(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, long, long, Eigen::JacobiRotation<float>*, Eigen::JacobiRotation<float>*) [11]
-----------------------------------------------
                0.00    0.09  188000/188000      void Eigen::internal::householder_qr_inplace_unblocked<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>::Scalar*) [10]
[12]     1.9    0.00    0.09  188000         void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> const&, float const&, float*) [12]
                0.00    0.05  188000/188000      void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [15]
                0.04    0.00  188000/188000      void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&) [16]
-----------------------------------------------
                0.04    0.01       2/2           GlobalHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, int&, int&, int&, int&, cv::Mat&, cv::Mat&) [4]
[13]     1.1    0.04    0.01       2         warpAndFuseImage(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int&, int&, int&, int&) [13]
                0.01    0.00 1213244/2424085     getColorSubpixelRGB(cv::Mat const&, float, float, int, int, unsigned char&, unsigned char&, unsigned char&) [19]
-----------------------------------------------
                0.00    0.00    8000/196000      void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [29]
                0.05    0.00  188000/196000      void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [15]
[14]     1.1    0.05    0.00  196000         Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, 1, false, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, float*, long, float) [14]
-----------------------------------------------
                0.00    0.05  188000/188000      void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> const&, float const&, float*) [12]
[15]     1.0    0.00    0.05  188000         void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [15]
                0.05    0.00  188000/196000      Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, 1, false, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, float*, long, float) [14]
-----------------------------------------------
                0.04    0.00  188000/188000      void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> const&, float const&, float*) [12]
[16]     0.9    0.04    0.00  188000         void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&) [16]
-----------------------------------------------
                0.04    0.00  188000/188000      void Eigen::internal::householder_qr_inplace_unblocked<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>::Scalar*) [10]
[17]     0.9    0.04    0.00  188000         void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >::makeHouseholder<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1>&, float&, float&) const [17]
-----------------------------------------------
                0.00    0.04       2/2           GlobalHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, int&, int&, int&, int&, cv::Mat&, cv::Mat&) [4]
[18]     0.8    0.00    0.04       2         singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
                0.01    0.01    1007/1007        RandomSampling(int, int, std::vector<int, std::allocator<int> >&) [20]
                0.00    0.02    1000/1002        fitHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [22]
                0.00    0.00    1007/1007        sampleValidTest(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [44]
                0.00    0.00    1000/1000        computeHomographyResidue(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [47]
                0.00    0.00       2/2           Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [51]
-----------------------------------------------
                0.01    0.00 1210841/2424085     warpAndFuseImageAPAP(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, int, int, int, Eigen::Array<float, -1, 1, 0, -1, 1> const&, Eigen::Array<float, -1, 1, 0, -1, 1> const&, cv::Mat&) [8]
                0.01    0.00 1213244/2424085     warpAndFuseImage(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int&, int&, int&, int&) [13]
[19]     0.4    0.02    0.00 2424085         getColorSubpixelRGB(cv::Mat const&, float, float, int, int, unsigned char&, unsigned char&, unsigned char&) [19]
-----------------------------------------------
                0.01    0.01    1007/1007        singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
[20]     0.4    0.01    0.01    1007         RandomSampling(int, int, std::vector<int, std::allocator<int> >&) [20]
                0.00    0.01    4028/4028        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [27]
                0.00    0.00    1007/1007        std::vector<int, std::allocator<int> >::reserve(unsigned long) [45]
-----------------------------------------------
                0.00    0.02   21000/21000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
[21]     0.4    0.00    0.02   21000         Eigen::internal::qr_preconditioner_impl<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1, 0, true>::run(Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [21]
                0.00    0.01    1000/1000        void Eigen::HouseholderSequence<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, 1, 0, -1, 1>, 1>::evalTo<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 1, -1, 1, 1, -1> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 1, -1, 1, 1, -1>&) const [24]
                0.00    0.01    1000/21000       Eigen::HouseholderQR<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::computeInPlace() [9]
-----------------------------------------------
                0.00    0.00       2/1002        GlobalHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, int&, int&, int&, int&, cv::Mat&, cv::Mat&) [4]
                0.00    0.02    1000/1002        singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
[22]     0.4    0.00    0.02    1002         fitHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [22]
                0.00    0.01    1002/21000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
-----------------------------------------------
                0.00    0.01    8000/8000        void Eigen::HouseholderSequence<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, 1, 0, -1, 1>, 1>::evalTo<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 1, -1, 1, 1, -1> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 1, -1, 1, 1, -1>&) const [24]
[23]     0.3    0.00    0.01    8000         void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const&, float const&, float*) [23]
                0.01    0.00    8000/8000        void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&) [25]
                0.00    0.00    8000/8000        void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [29]
-----------------------------------------------
                0.00    0.01    1000/1000        Eigen::internal::qr_preconditioner_impl<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1, 0, true>::run(Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [21]
[24]     0.3    0.00    0.01    1000         void Eigen::HouseholderSequence<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, 1, 0, -1, 1>, 1>::evalTo<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 1, -1, 1, 1, -1> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 1, -1, 1, 1, -1>&) const [24]
                0.00    0.01    8000/8000        void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const&, float const&, float*) [23]
-----------------------------------------------
                0.01    0.00    8000/8000        void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const&, float const&, float*) [23]
[25]     0.2    0.01    0.00    8000         void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&) [25]
-----------------------------------------------
                0.01    0.00    4028/4028        int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [27]
[26]     0.2    0.01    0.00    4028         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [26]
-----------------------------------------------
                0.00    0.01    4028/4028        RandomSampling(int, int, std::vector<int, std::allocator<int> >&) [20]
[27]     0.2    0.00    0.01    4028         int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&) [27]
                0.01    0.00    4028/4028        std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [26]
-----------------------------------------------
                0.01    0.00       4/4           detectSiftMatchWithVLFeat(cv::Mat&, cv::Mat&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [6]
[28]     0.2    0.01    0.00       4         detectSiftAndCalculateDescriptor(cv::Mat&, double*&, unsigned char*&) [28]
-----------------------------------------------
                0.00    0.00    8000/8000        void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const&, float const&, float*) [23]
[29]     0.0    0.00    0.00    8000         void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [29]
                0.00    0.00    8000/196000      Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, 1, false, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, float*, long, float) [14]
-----------------------------------------------
                0.00    0.00 4509549/4509549     APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[36]     0.0    0.00    0.00 4509549         pdist2(float, float, float, float) [36]
-----------------------------------------------
                0.00    0.00   21000/21000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
[37]     0.0    0.00    0.00   21000         Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::allocate(long, long, unsigned int) [37]
-----------------------------------------------
                0.00    0.00   20000/20000       Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int) [5]
[38]     0.0    0.00    0.00   20000         Eigen::MatrixBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::setIdentity(long, long) [38]
-----------------------------------------------
                0.00    0.00   19998/19998       APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[39]     0.0    0.00    0.00   19998         rollVector9f(Eigen::Matrix<float, -1, 1, 0, -1, 1> const&) [39]
-----------------------------------------------
                0.00    0.00   19998/19998       APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[40]     0.0    0.00    0.00   19998         unrollMatrix3f(Eigen::Matrix<float, 3, 3, 0, 3, 3> const&) [40]
-----------------------------------------------
                0.00    0.00   19998/19998       APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[41]     0.0    0.00    0.00   19998         void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [41]
                0.00    0.00       1/1           Eigen::internal::queryCacheSizes(int&, int&, int&) [56]
-----------------------------------------------
                0.00    0.00    4007/4007        sampleValidTest(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [44]
[42]     0.0    0.00    0.00    4007         colinearity(Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&) [42]
-----------------------------------------------
                0.00    0.00    4000/4000        computeHomographyResidue(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [47]
[43]     0.0    0.00    0.00    4000         noHomogeneous(Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [43]
-----------------------------------------------
                0.00    0.00    1007/1007        singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
[44]     0.0    0.00    0.00    1007         sampleValidTest(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [44]
                0.00    0.00    4007/4007        colinearity(Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&) [42]
-----------------------------------------------
                0.00    0.00    1007/1007        RandomSampling(int, int, std::vector<int, std::allocator<int> >&) [20]
[45]     0.0    0.00    0.00    1007         std::vector<int, std::allocator<int> >::reserve(unsigned long) [45]
-----------------------------------------------
                0.00    0.00    1000/1000        computeHomographyResidue(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [47]
[46]     0.0    0.00    0.00    1000         filterPointAtInfinity(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [46]
-----------------------------------------------
                0.00    0.00    1000/1000        singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
[47]     0.0    0.00    0.00    1000         computeHomographyResidue(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [47]
                0.00    0.00    4000/4000        noHomogeneous(Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [43]
                0.00    0.00    1000/1000        filterPointAtInfinity(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [46]
-----------------------------------------------
                0.00    0.00       4/4           normalizeMatch(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [50]
[48]     0.0    0.00    0.00       4         normalizePts(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [48]
-----------------------------------------------
                0.00    0.00       4/4           APAP(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int, int, int, int, cv::Mat const&, cv::Mat const&, cv::Mat&) [1]
[49]     0.0    0.00    0.00       4         Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> >(Eigen::DenseBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> > const&) [49]
-----------------------------------------------
                0.00    0.00       2/2           GlobalHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, int&, int&, int&, int&, cv::Mat&, cv::Mat&) [4]
[50]     0.0    0.00    0.00       2         normalizeMatch(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [50]
                0.00    0.00       4/4           normalizePts(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [48]
-----------------------------------------------
                0.00    0.00       2/2           singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [18]
[51]     0.0    0.00    0.00       2         Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [51]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [203]
[52]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12normalizePtsRN5Eigen6MatrixIfLin1ELin1ELi0ELin1ELin1EEERNS0_IfLi3ELi3ELi0ELi3ELi3EEE [52]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [203]
[53]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z19getColorSubpixelRGBRKN2cv3MatEffiiRhS3_S3_ [53]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [203]
[54]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z25detectSiftMatchWithVLFeatRN2cv3MatES1_RN5Eigen6MatrixIfLin1ELin1ELi0ELin1ELin1EEE [54]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [203]
[55]     0.0    0.00    0.00       1         _GLOBAL__sub_I_saveData [55]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [41]
[56]     0.0    0.00    0.00       1         Eigen::internal::queryCacheSizes(int&, int&, int&) [56]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [52] _GLOBAL__sub_I__Z12normalizePtsRN5Eigen6MatrixIfLin1ELin1ELi0ELin1ELin1EEERNS0_IfLi3ELi3ELi0ELi3ELi3EEE [8] warpAndFuseImageAPAP(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, int, int, int, Eigen::Array<float, -1, 1, 0, -1, 1> const&, Eigen::Array<float, -1, 1, 0, -1, 1> const&, cv::Mat&) [11] void Eigen::internal::real_2x2_jacobi_svd<Eigen::Matrix<float, -1, -1, 0, -1, -1>, float, long>(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, long, long, Eigen::JacobiRotation<float>*, Eigen::JacobiRotation<float>*)
  [53] _GLOBAL__sub_I__Z19getColorSubpixelRGBRKN2cv3MatEffiiRhS3_S3_ [46] filterPointAtInfinity(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [21] Eigen::internal::qr_preconditioner_impl<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1, 0, true>::run(Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&)
  [54] _GLOBAL__sub_I__Z25detectSiftMatchWithVLFeatRN2cv3MatES1_RN5Eigen6MatrixIfLin1ELin1ELi0ELin1ELin1EEE [47] computeHomographyResidue(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [16] void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&)
  [55] _GLOBAL__sub_I_saveData [6] detectSiftMatchWithVLFeat(cv::Mat&, cv::Mat&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [25] void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const&, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > const&, Eigen::internal::generic_product_impl<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, 1, 0, -1, 1> const> const, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const>, Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> >, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&)
  [42] colinearity(Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&) [7] matchDescriptorWithRatioTest(unsigned char const*, unsigned char const*, int, int, int*&) [3] Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*)
  [48] normalizePts(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [28] detectSiftAndCalculateDescriptor(cv::Mat&, double*&, unsigned char*&) [14] Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, 1, false, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, float*, long, float)
  [39] rollVector9f(Eigen::Matrix<float, -1, 1, 0, -1, 1> const&) [36] pdist2(float, float, float, float) [10] void Eigen::internal::householder_qr_inplace_unblocked<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>&, Eigen::Block<Eigen::Matrix<float, -1, 1, 0, -1, 1>, -1, 1, false>&, Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>::Scalar*)
  [22] fitHomography(Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [12] void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1> const&, float const&, float*) [41] void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long)
  [43] noHomogeneous(Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [23] void Eigen::MatrixBase<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false> >::applyHouseholderOnTheLeft<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> >(Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const&, float const&, float*) [5] Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::compute(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, unsigned int)
  [20] RandomSampling(int, int, std::vector<int, std::allocator<int> >&) [38] Eigen::MatrixBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::setIdentity(long, long) [37] Eigen::JacobiSVD<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 1>::allocate(long, long, unsigned int)
  [50] normalizeMatch(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Matrix<float, 3, 3, 0, 3, 3>&) [9] Eigen::HouseholderQR<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::computeInPlace() [17] void Eigen::MatrixBase<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> >::makeHouseholder<Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1> >(Eigen::VectorBlock<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false>, -1>&, float&, float&) const
  [40] unrollMatrix3f(Eigen::Matrix<float, 3, 3, 0, 3, 3> const&) [51] Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [24] void Eigen::HouseholderSequence<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, 1, 0, -1, 1>, 1>::evalTo<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, 1, -1, 1, 1, -1> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::Matrix<float, 1, -1, 1, 1, -1>&) const
  [44] sampleValidTest(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, Eigen::Matrix<float, -1, -1, 0, -1, -1> const&) [49] Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> >(Eigen::DenseBase<Eigen::Transpose<Eigen::Product<Eigen::Inverse<Eigen::Matrix<float, 3, 3, 0, 3, 3> >, Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, -1, false> const>, 0> const> > const&) [26] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  [13] warpAndFuseImage(cv::Mat const&, cv::Mat const&, Eigen::Matrix<float, 3, 3, 0, 3, 3> const&, int&, int&, int&, int&) [56] Eigen::internal::queryCacheSizes(int&, int&, int&) [27] int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&)
  [18] singleModelRANSAC(Eigen::Matrix<float, -1, -1, 0, -1, -1> const&, int, Eigen::Matrix<float, -1, -1, 0, -1, -1>&) [15] void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, 1, true>, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [45] std::vector<int, std::allocator<int> >::reserve(unsigned long)
  [19] getColorSubpixelRGB(cv::Mat const&, float, float, int, int, unsigned char&, unsigned char&, unsigned char&) [29] void Eigen::internal::gemv_dense_selector<2, 1, true>::run<Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const>, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const>, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > > >(Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1>, -1, -1, false>, -1, -1, false> const> const&, Eigen::Transpose<Eigen::Transpose<Eigen::Block<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, -1, 1, false> const> const> const&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >&, Eigen::Transpose<Eigen::Map<Eigen::Matrix<float, 1, -1, 1, 1, -1>, 0, Eigen::Stride<0, 0> > >::Scalar const&) [2] frame_dummy
